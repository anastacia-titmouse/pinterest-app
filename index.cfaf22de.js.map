{"mappings":"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","sources":["src/scripts/desk.selector.js","src/scripts/select.desk.modal.js","src/scripts/complaint.modal.js","src/scripts/desk.js","node_modules/uuid/dist/esm-browser/native.js","node_modules/uuid/dist/esm-browser/rng.js","node_modules/uuid/dist/esm-browser/stringify.js","node_modules/uuid/dist/esm-browser/v4.js","src/scripts/create.board.modal.js","src/scripts/index.js"],"sourcesContent":["import { activateDesk, getDesksModels, renderActiveDesk } from './desk';\n\n// cleans inner html\nexport const cleanSelect = () => {\n  const select = document.getElementById(\"desk_selector\")\n  select.innerHTML = '';\n}\n\nexport const renderSelectOptions = () => {\n  const select = document.getElementById(\"desk_selector\")\n\n  //получаем все доски, \n  const boardModels = getDesksModels()\n  for (let boardId of Object.keys(boardModels)) {\n    //  {\n    //   \"id\": \"main\",\n    //   \"title\": \"Homepage\",\n    //   \"active\": true\n    // },\n    const boardModel = boardModels[boardId]\n\n//создаем элемент селектора досок с названием доски\n    const optionEl = document.createElement('option')\n    optionEl.setAttribute('value', boardId)\n    optionEl.innerHTML = boardModel.title\n    if (boardModel.active) {\n      select.value = boardModel.id\n      optionEl.setAttribute('selected', 'selected')\n    }\n\n    select.appendChild(optionEl)\n  }\n}\n\nexport const rerenderSelect = () => {\n  cleanSelect()\n  renderSelectOptions()\n}\n\nexport function onDeskSelectorChanged(deskId) {\n  activateDesk(deskId)\n  renderActiveDesk().catch(error => {console.log(error)})\n}\n\nrenderSelectOptions()","import {getDesksModels} from './desk'\n\n//finds pin's id to open modal for exactly this pin, which is clicked on\nexport const showSelectBoardModal = (pinId) => {\n    const modalWrapper = document.getElementById('select_board_modal')\n    modalWrapper.classList.add('visible')\n    \n    const modalPinIdInput = document.getElementById('select_board_modal_pin_id')\n    modalPinIdInput.value = pinId\n\n    cleanSelectOptions()\n    renderSelectOptions()\n}\n\n//\nexport function selectBoardModalFormSubmitHandler(event) {\n    event.preventDefault()\n\n    const modalPinIdInput = document.getElementById('select_board_modal_pin_id')\n    const pinId = modalPinIdInput.value\n\n    const select = document.getElementById(\"select_board_modal_selector\")\n    const deskId = select.value\n\n    //finds pin's id in local storage\n    const deskPinsJsonData = localStorage.getItem(`desk-pins-${deskId}`)\n    let deskPins;\n    //if there are none, create a new set of pins\n    if(!deskPinsJsonData) {\n        deskPins = new Set()\n    //if there are saved pins in local storage, get the set from the local storage\n    } else {\n        deskPins = new Set(JSON.parse(deskPinsJsonData))\n    }\n    //adds pin's id to local storage\n    deskPins.add(pinId)\n    localStorage.setItem(`desk-pins-${deskId}`, JSON.stringify(Array.from(deskPins)))\n    hideSelectBoardModal()\n}\n\n//closes modal\nexport function hideSelectBoardModal() {\n    const modalWrapper = document.getElementById('select_board_modal')\n    modalWrapper.classList.remove('visible')\n}\n\n//cleans select options\nexport function cleanSelectOptions() {\n    const select = document.getElementById(\"select_board_modal_selector\")\n    select.innerHTML = ''\n}\n\n//renders select options\nexport function renderSelectOptions() {\n    const select = document.getElementById(\"select_board_modal_selector\")\n\n    const boardModels = getDesksModels()\n    for (let boardId of Object.keys(boardModels)) {\n        if(boardId === 'main') {\n            continue\n        }\n        \n        const boardModel = boardModels[boardId]\n        const optionEl = document.createElement('option')\n        optionEl.setAttribute('value', boardId)\n        optionEl.innerHTML = boardModel.title\n        select.appendChild(optionEl)\n    }\n}","export const showComplaintModal = (pinId) => {\n    const complaintModalEl = document.getElementById('complaint_modal');\n    complaintModalEl.style.display = 'flex';\n    \n    const hiddenInputEl = document.getElementById('complaint_modal_hidden_pin_id');\n    hiddenInputEl.value = pinId\n}\n\nexport const closeComplaintModal = () => {\n    const complaintModalEl = document.getElementById('complaint_modal');\n    complaintModalEl.style.display = 'none';\n}\n\n\nexport const closeComplaintModalWindow = () => {\n    const hiddenModalEl = document.getElementById('complaint_modal');\n    window.onclick = function (e) {\n        if (e.target == hiddenModalEl) {\n            closeComplaintModal();\n        }\n    }\n}\n\n\n\n\n\n\n/**\n * Отправляем данные по нажатию кнопки \"Отправить\" на бекенд\n */\nexport const sendComplaint = async(event) => {\n    event.preventDefault();\n    \n    // const form = document.getElementById('complaint_modal_form');\n    // const formData = new FormData(form);\n\n    // const pinId = formData.get('pin_id');\n    // const complaint = formData.get('complaint_variant');\n\n    // console.log(pinId, complaint)\n\n    // const getPinResp = await fetch(`https://63052f15697408f7edc32802.mockapi.io/api/v1/card/${pinId}`, {\n    //     method: 'get'\n    // });\n    // const pinData = await getPinResp.json();\n\n    // const updatePinResp = await fetch(`https://63052f15697408f7edc32802.mockapi.io/api/v1/card/${pinId}`, {\n    //     method: 'put',\n    //     body: JSON.stringify({...pinData, complaint})\n    // })\n\n    closeComplaintModal()\n}","import { rerenderSelect as rerenderDesksSelector } from './desk.selector';\nimport {showSelectBoardModal} from './select.desk.modal'\nimport {showComplaintModal} from './complaint.modal'\n\nexport function deletePin(deskId, pinId) {\n  const pin = document.getElementById(`pin_${pinId}`)\n  const pinParent = pin.parentElement\n  pinParent.removeChild(pin)\n\n  deletePinModelFromDesk(deskId, pinId)\n}\n\nexport function deletePinModelFromDesk(deskId, pinId) {\n  const deskPinsJsonData = localStorage.getItem(`desk-pins-${deskId}`)\n  let deskPins;\n  if(deskPinsJsonData) {\n    deskPins = new Set(JSON.parse(deskPinsJsonData))\n  } else {\n    deskPins = new Set()\n  }\n\n  deskPins.delete(pinId)\n  console.log(deskPins)\n\n  localStorage.setItem(`desk-pins-${deskId}`, JSON.stringify(Array.from(deskPins)))\n}\n\nexport function activateDesk(deskId) {\n   //активирует выбранную доску по id\n  const desksModels = getDesksModels()\n  for (let currentDeskId of Object.keys(desksModels)) {\n    //deskModels.7603d172-a09c-4c26-a2b1-9f06b40de803.active may be true or false\n    desksModels[currentDeskId].active = deskId === currentDeskId; \n    console.log(currentDeskId)\n    console.log(deskId === currentDeskId)\n  }\n  localStorage.setItem('desks', JSON.stringify(desksModels))\n}\n\n//adds model of desk\nexport function addDesksModel(deskId, deskTitle, active) {\n  const desksModels= getDesksModels()\n\n  desksModels[deskId] = {\n    id: deskId,\n    title: deskTitle,\n    active\n  }\n\n  localStorage.setItem('desks', JSON.stringify(desksModels)) //saves desk model to local storage in JSON\n\n  rerenderDesksSelector()  //\n  return desksModels //returns object of desk \n}\n\nexport function getDesksModels() {\n  const desksJson = localStorage.getItem('desks')  //gets desk in JSON format from the local storage\n  if(!desksJson) {   //if there's no json, returns an empty object\n    return {}\n  } else {\n    return JSON.parse(desksJson)  //if in JSON - parses it into object\n  }\n}\n\nexport async function fetchPinsByDeskId(deskId) {  //function to fetch pins from mock.api\n  let pinsData = [];\n\n  if (deskId === 'main') {\n    const response = await fetch('https://63052f15697408f7edc32802.mockapi.io/api/v1/card', {method: 'get'}) //when in main desk, waits for the fetch from mock.api.\n    pinsData = await response.json() // then waits for the response in json format\n  } else {\n    // if not in main, gets pins from the desk fron the local storage\n    const pinIdsJsonData = localStorage.getItem(`desk-pins-${deskId}`)\n\n    //if such note exists in local storage - makes object from json and gets all the pins\n    if (pinIdsJsonData) {\n      pinIds = JSON.parse(pinIdsJsonData) \n\n        //gets only pins with id from the the chosen desk\n      const promises = pinIds.map(pinId => {\n        return fetch(`https://63052f15697408f7edc32802.mockapi.io/api/v1/card/${pinId}`, {method: 'get'})\n          .then(response => {\n            return response.json()\n          })\n      })\n\n      pinsData = await Promise.all(promises) \n    }\n  }\n\n  const searchInput = document.getElementById('search_top') //finds search input\n  const keyword = searchInput.value //gets its value\n\n  if(keyword) {\n    return pinsData.filter(pinData => {\n      return pinData.hashtag.startsWith(keyword) //a hashtag starts with a keyword from search\n    })\n  } else {\n    return pinsData //shows all the pins\n  }\n}\n\nexport async function renderActiveDesk() {\n  const deskElement = document.getElementById('board_list')\n  //Clean desk list\n  deskElement.innerHTML = ''\n\n  //Init desk models if needed\n  let desksModels = getDesksModels()\n  if(Object.keys(desksModels).length === 0) {\n    desksModels = addDesksModel('main', 'Homepage', true) \n  }\n\n  //Check active desk\n  const activeDesk = getActiveDesk()\n  if (!activeDesk) {\n    throw new Error('Active desk not found') \n  }\n\n  //render pins\n   // gets active desk id and pins on it. Pins data - array of pins objects\n  const pinsData = await fetchPinsByDeskId(activeDesk.id)\n  //for each pin from pinsData creates pin with information from mock.api and active desk id. \n  //Then adds pin on deskElement(our desk)\n  pinsData.map(pinData => {\n    const pinElement = createPinElement(pinData, activeDesk.id)\n    deskElement.appendChild(pinElement)\n  })\n}\n\nexport function createPinElement(pinData, deskId) {         //creates pins\n  const pinWrapper = document.createElement('div');\n  pinWrapper.classList.add('board-list__pin--wrap')\n  pinWrapper.setAttribute('id', `pin_${pinData.id}`);\n\n  const pin = document.createElement('div');\n  pin.classList.add('board-list__pin')\n  pinWrapper.appendChild(pin);\n\n  const image = document.createElement('img')\n  image.classList.add('board-list__pin-img')\n  image.setAttribute('src', pinData.imageUrl);\n  image.setAttribute('alt', pinData.imageUrl)\n  pin.appendChild(image)\n\n  const pinActionsWrapper = document.createElement('div')\n  pinActionsWrapper.classList.add('pin-actions-wrapper')\n  pin.appendChild(pinActionsWrapper)\n\n  const pinActions = document.createElement('div')\n  pinActions.classList.add('pin-actions')\n  pinActionsWrapper.appendChild(pinActions)\n\n  if(deskId === 'main') {\n    const addBtn = document.createElement('button')\n    addBtn.classList.add('pin-btn', 'add-pin')\n    addBtn.textContent = 'Добавить'\n    pinActions.appendChild(addBtn)\n    addBtn.onclick = () => {\n      showSelectBoardModal(pinData.id)\n    }\n  } else {  \n    const btnClose = document.createElement('button')\n    btnClose.classList.add('pin-actions__delete-btn')\n    btnClose.innerHTML = \"&times;\"\n    btnClose.onclick = () => {\n      deletePin(deskId, pinData.id)\n    }\n    pinActions.appendChild(btnClose)\n  }\n\n  const complaintBtn = document.createElement('button')\n  complaintBtn.classList.add('pin-btn', 'complaint-pin')\n  complaintBtn.textContent = 'Пожаловаться'\n  complaintBtn.onclick = () => {showComplaintModal(pinData.id)}\n  pinActions.appendChild(complaintBtn)\n  \n  const descrWrapper = document.createElement('div');\n  descrWrapper.classList.add('board-list__description--wrapper');\n  pinWrapper.appendChild(descrWrapper);\n\n  const avatarWrapper = document.createElement('div');\n  avatarWrapper.classList.add('board-list__avatar-wrapper');\n  descrWrapper.appendChild(avatarWrapper);\n\n  const avatar = document.createElement('img')\n  avatar.setAttribute('src', pinData.authorAvatar);\n  avatar.classList.add('board-list__avatar')\n  avatarWrapper.appendChild(avatar)\n\n  const description = document.createElement('p')\n  description.classList.add('board-list__description')\n  description.textContent = pinData.description\n  descrWrapper.appendChild(description)\n\n  return pinWrapper\n}\n\nexport function getActiveDesk() {   //?\n  const desksModels = getDesksModels()\n  const activeDeskId = Object.keys(desksModels)\n    .find(deskId => (desksModels[deskId].active))\n  if (activeDeskId) {\n    return desksModels[activeDeskId]\n  }\n}","const randomUUID = typeof crypto !== 'undefined' && crypto.randomUUID && crypto.randomUUID.bind(crypto);\nexport default {\n  randomUUID\n};","// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nlet getRandomValues;\nconst rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nconst byteToHex = [];\n\nfor (let i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).slice(1));\n}\n\nexport function unsafeStringify(arr, offset = 0) {\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  return (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase();\n}\n\nfunction stringify(arr, offset = 0) {\n  const uuid = unsafeStringify(arr, offset); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import native from './native.js';\nimport rng from './rng.js';\nimport { unsafeStringify } from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  if (native.randomUUID && !buf && !options) {\n    return native.randomUUID();\n  }\n\n  options = options || {};\n  const rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (let i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return unsafeStringify(rnds);\n}\n\nexport default v4;","import {getDesksModels, addDesksModel} from './desk'\nimport { v4 as uuidv4 } from 'uuid'; // export v4 as uudv4(псевдоним)\n\n\nexport const openModal = () => {\n    const modalEl = document.getElementById(\"create_board_modal\") //finds button that creates board modal\n\n    if (modalEl) {\n        modalEl.style.display = 'block' \n    }\n\n}\n\nexport const closeModal = () => {\n  const modalEl = document.getElementById(\"create_board_modal\")\n  modalEl.style.display = 'none'\n  setModalError('') //обнуляет ошибку\n  cleanForm()\n}\n\n//closes modal woindow when clicked somewhere around it\nexport const closeCreateModalWindow = () => {\n  const hiddenModalEl = document.getElementById(\"create-board-modal-close\");\n  window.onclick = function (e) {\n      if (e.target == hiddenModalEl) {\n          closeModal();\n      }\n  }\n}\n\n//adds or removes error block\nexport const setModalError = (errorText) => {\n  const errorBlock = document.querySelector(\"#crete_board_modal__form-error\")\n\n  if (!errorText) {\n    errorBlock.classList.contains('visible') && errorBlock.classList.remove('visible') //works as another if block. If on the left is true -> do what's on the right\n  } else {\n    errorBlock.textContent = errorText\n    errorBlock.classList.add('visible')\n  }\n}\n\nexport const cleanForm = () => {\n  const input = document.querySelector(\"#create_board_modal__desk-title-input\")\n  input.value = ''\n  setModalError('')\n}\n\n// form submit\nexport const onCreateDeskSubmit = (event) => {\n  event.preventDefault()\n  const form = document.getElementById(\"crete_board_modal__form\")\n  const input = form.querySelector(\"#create_board_modal__desk-title-input\")\n  const deskTitle = input.value\n\n  if (!deskTitle) {\n    setModalError('Missing desk title')\n    return\n  }\n\n  //finds existing desks with the same title\n  const desksModels = getDesksModels()\n  const isDeskTitleAlreadyExists = Object.keys(desksModels).some(deskId => {\n    return deskTitle === desksModels[deskId].title\n  })\n\n  if (isDeskTitleAlreadyExists) {\n    setModalError('Desk with same title already exists')\n    return\n  }\n\n  addDesksModel(uuidv4(), deskTitle, false)\n  cleanForm()\n  closeModal()\n}","import { renderActiveDesk, activateDesk } from './desk';\nimport { sendComplaint, closeComplaintModal, closeComplaintModalWindow } from \"./complaint.modal\";\nimport { onDeskSelectorChanged } from \"./desk.selector\";\nimport {\n  openModal as openCreateBoardModal,\n  closeModal as closeCreateBoardModal, onCreateDeskSubmit, closeCreateModalWindow\n} from './create.board.modal';\nimport { hideSelectBoardModal, selectBoardModalFormSubmitHandler } from './select.desk.modal'\n\n// init\ndocument.addEventListener('DOMContentLoaded', () => {\n  renderActiveDesk().catch(error => {console.log(error)})\n\n  window.onclick = () => {closeComplaintModalWindow()};\n  window.onclick = () => {closeCreateModalWindow()};\n\n  document.getElementById('complaint_modal_cancel').addEventListener('click', () => {closeComplaintModal()});\n  document.getElementById('complaint_modal_form').addEventListener('submit', (event) => {sendComplaint(event)});\n  document.getElementById('create_desk_btn').addEventListener('click', () => {openCreateBoardModal()})\n  document.getElementById('close_create_board_modal').addEventListener('click', () => {closeCreateBoardModal()})\n  document.getElementById('crete_board_modal__form').addEventListener('submit', event => {onCreateDeskSubmit(event)})\n  document.getElementById('desk_selector').addEventListener('change', event => {onDeskSelectorChanged(event.target.value)})\n  document.getElementById('close_select_board_modal').addEventListener('click', () => {hideSelectBoardModal()})\n  document.getElementById('select_board_modal__form').addEventListener('submit', event => {selectBoardModalFormSubmitHandler(event)})\n  document.getElementById('search_top').addEventListener('input', () => {renderActiveDesk()})\n\n  document.getElementById('logo').addEventListener('click', event => {\n    event.preventDefault();\n\n    activateDesk('main');\n    renderActiveDesk();\n    document.getElementById('desk_selector').value = 'main'\n  })\n});"],"names":["$005d6420f20e0205$export$a1a1b486d60901d7","select","document","getElementById","boardModels","$a793c543e1aeee79$export$4c1d62dca661069b","boardId","Object","keys","boardModel","optionEl","createElement","setAttribute","innerHTML","title","active","value","id","appendChild","$005d6420f20e0205$export$a75eed5b9bb4fc6e","$36af100aa7aaa9e4$export$91a8eee01f4a03da","pinId","classList","add","$36af100aa7aaa9e4$export$a1a1b486d60901d7","$36af100aa7aaa9e4$export$303f4fa102e7e703","event","preventDefault","deskId","deskPinsJsonData","localStorage","getItem","deskPins","Set","JSON","parse","setItem","stringify","Array","from","$36af100aa7aaa9e4$export$12ecedb2d5a7e4ef","remove","$2b971df66e300f35$export$401131a83fb45701","style","display","$2b971df66e300f35$export$206f99f27b98f13b","$2b971df66e300f35$export$51decf49f4e1206c","hiddenModalEl","window","onclick","e","target","$2b971df66e300f35$export$5d82faa980c3ffa7","async","$a793c543e1aeee79$export$4651d649a35e8440","pin","parentElement","removeChild","delete","console","log","$a793c543e1aeee79$export$2a333d25d22e5bd1","$a793c543e1aeee79$export$98d3b26ba84259ba","desksModels","currentDeskId","$a793c543e1aeee79$export$65209e172153dce6","deskTitle","desksJson","$a793c543e1aeee79$export$db57c4a3f40b7fbb","deskElement","length","activeDesk","activeDeskId","find","$a793c543e1aeee79$export$e6ca18920bc0cb42","Error","pinsData","response","fetch","method","json","pinIdsJsonData","pinIds","promises","map","then","Promise","all","keyword","filter","pinData","hashtag","startsWith","$a793c543e1aeee79$export$32ebd45305befc2c","pinElement","pinWrapper","image","imageUrl","pinActionsWrapper","pinActions","addBtn","textContent","btnClose","complaintBtn","descrWrapper","avatarWrapper","avatar","authorAvatar","description","$a793c543e1aeee79$export$d08c21158cb91cf6","$5afbd4fb4df23c28$export$2e2bcd8739ae039","crypto","randomUUID","bind","$ecc82b4b4d5334a5$var$getRandomValues","$ecc82b4b4d5334a5$var$rnds8","Uint8Array","$ecc82b4b4d5334a5$export$2e2bcd8739ae039","getRandomValues","$5ce84198744ccadf$var$byteToHex","i","push","toString","slice","$5ce84198744ccadf$export$8fb373d660548968","arr","offset","toLowerCase","$87befc68df50040c$export$2e2bcd8739ae039","options","buf","rnds","random","rng","$9ca66cd3593dee79$export$a7f6cffb6b8ba11c","modalEl","$9ca66cd3593dee79$export$3f6fecd573f3fa48","$9ca66cd3593dee79$export$4347fb2465b349b3","$9ca66cd3593dee79$export$dc46a306c32dfa78","$9ca66cd3593dee79$export$a80605859ab7f6c6","errorText","errorBlock","querySelector","contains","$9ca66cd3593dee79$export$180240ec292ac4e0","some","addEventListener","catch","error"],"version":3,"file":"index.cfaf22de.js.map"}